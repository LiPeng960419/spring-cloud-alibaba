server:
  port: 9091
mybatis:
  mapper-locations: classpath:mapper/*.xml
  config-location: classpath:mybatis-config.xml
spring:
  application:
    name: shop-order
  zipkin:
    base-url: http://192.168.7.1:9411/ #server请求地址
    discovery-client-enabled: false # 让nacos把它当成一个url 不当做服务
  sleuth:
    sampler:
      probability: 1.0 #采样百分比
  jackson:
    time-zone: Asia/Shanghai
    date-format: yyyy-MM-dd HH:mm:ss
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    password: root
    url: jdbc:mysql://127.0.0.1:3306/order?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
  jpa:
    open-in-view: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL57Dialect
        format_sql: true
        hbm2ddl:
          auto: update
        show_sql: true
  cloud:
    alibaba:
      seata:
        tx-service-group: order_tx_group
    nacos:
      discovery:
        server-addr: 192.168.7.1
    sentinel:
      filter:
        enabled: false #关闭commonfilter实例化   实现关联资源限流
      transport:
        dashboard: 192.168.7.1:9090 #控制台服务地址
        port: 8720  #跟控制台交流的端口 随意指定未使用的即可
      datasource:
        ds:
          nacos:
            server-addr: 192.168.7.1:8848
            dataId: ${spring.application.name}-sentinel
            groupId: DEFAULT_GROUP
            rule-type: flow
            dataType: json
  #NFLoadBalancerClassName: 配置ILoadBalancer的实现类
  #NFLoadBalancerRuleClassName: 配置IRule的实现类
  #NFLoadBalancerPingClassName: 配置IPing的实现类
  #NFWSServerListClassName: 配置ServerList的实现类
  #NIWSServerListFilterClassName: 配置ServerListFilter的实现类
product: #服务提供者的名称
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #找AbstractLoadBalancerRule子类
#开启feign对sentinel的支持
feign:
  sentinel:
    enabled: true
###设置feign客户端超时时间
###SpringCloud feign 默认开启支持ribbon
ribbon:
  ###指的是建立连接后从服务器读取到可用资源所用的时间。
  ReadTimeout: 2000
  ###指的是建立连接所用的时间，适用于网络状况正常的情况下，两端连接所用的时间。
  ConnectTimeout: 2000